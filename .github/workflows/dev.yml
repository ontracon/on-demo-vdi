name: Development
on:
  workflow_dispatch:
  pull_request:
  push:

permissions:
  # required for all workflows
  contents: write
  checks: write
  pull-requests: write
  discussions: write
  statuses: write
# Ensures that only one deploy task run at a time.
concurrency:
  group: Development

jobs:
  tofu:
    if: ${{ github.event.pull_request.head.repo.fork != true }}
    runs-on: [ 'Linux' ]
    name: Deploy DEV
    environment: 'Development'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check Installation
        uses: otc-code/action-tofu@v1.2.2
        with:
          TF_ACTION: 'install'
        env:
          GITHUB_COM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Static tests
        uses: otc-code/action-tofu@v1.2.2
        with:
          TF_DIR: 'env/dev'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION: 'static_checks'
          GH_STEP_SUMMARY: 'true'
      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ON_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ON_AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'
      - name: tofu init (autopilot AWS)
        uses: otc-code/action-tofu@main
        with:
          TF_DIR: 'env/dev'
          TF_ACTION: 'init'
          TF_PARAMETER: 'autopilot=aws,region=eu-central-1'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: plan
        uses: otc-code/action-tofu@main
        with:
          TF_DIR: 'env/dev'
          TF_ACTION: 'plan'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: apply
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: otc-code/action-tofu@main
        with:
          TF_DIR: 'env/dev'
          TF_ACTION: 'apply'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: destroy
        if: ${{ github.ref == 'refs/heads/main' && github.event_name== 'workflow_dispatch' }}
        uses: otc-code/action-tofu@main
        with:
          TF_DIR: 'env/dev'
          TF_ACTION: 'destroy'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}